# -*- coding: utf-8 -*-
"""Lab9_Hierarchical_iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o0q9hWTTCdy9rvUDhu7WpS7eej-eAMio
"""

from sklearn import datasets

iris = datasets.load_iris()

iris.data[:10]

iris.target

from sklearn.cluster import AgglomerativeClustering


ward = AgglomerativeClustering(n_clusters=3)
ward_pred = ward.fit_predict(iris.data)

complete = AgglomerativeClustering(n_clusters=3,linkage='complete')
complete_pred = complete.fit_predict(iris.data)
avg = AgglomerativeClustering(n_clusters=3,linkage='average')
avg_pred = avg.fit_predict(iris.data)

from sklearn.metrics import adjusted_rand_score

ward_ar_score = adjusted_rand_score(iris.target, ward_pred)

complete_ar_score = adjusted_rand_score(iris.target, complete_pred)

avg_ar_score = adjusted_rand_score(iris.target, complete_pred)

print( "Scores: \nWard:", ward_ar_score,"\nComplete: ", complete_ar_score, "\nAverage: ", avg_ar_score)

iris.data[:15]

from sklearn import preprocessing

normalized_X = preprocessing.normalize(iris.data)
normalized_X[:10]

ward = AgglomerativeClustering(n_clusters=3)
ward_pred = ward.fit_predict(normalized_X)

complete = AgglomerativeClustering(n_clusters=3, linkage="complete")
complete_pred = complete.fit_predict(normalized_X)

avg = AgglomerativeClustering(n_clusters=3, linkage="average")
avg_pred = avg.fit_predict(normalized_X)


ward_ar_score = adjusted_rand_score(iris.target, ward_pred)
complete_ar_score = adjusted_rand_score(iris.target, complete_pred)
avg_ar_score = adjusted_rand_score(iris.target, avg_pred)

print( "Scores: \nWard:", ward_ar_score,"\nComplete: ", complete_ar_score, "\nAverage: ", avg_ar_score)

from scipy.cluster.hierarchy import linkage
linkage_type = 'ward'

linkage_matrix = linkage(normalized_X, linkage_type)

from scipy.cluster.hierarchy import dendrogram
import matplotlib.pyplot as plt
plt.figure(figsize=(22,18))
dendrogram(linkage_matrix)

plt.show()