# -*- coding: utf-8 -*-
"""Lab9_Hierarchical_Diabetes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L_eenPtFDmuCZlRdghSh4uRipadbNDgr
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import seaborn as sns
import matplotlib.pyplot as plt

data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/diabetes.csv')
data.head(10)

data.info()

data.describe()

from scipy.cluster.hierarchy import linkage, dendrogram

merg = linkage(data.iloc[200:220,:],method = 'single')
dendrogram(merg, leaf_rotation = 90, leaf_font_size = 6)
plt.show()



from sklearn.cluster import AgglomerativeClustering

hc = AgglomerativeClustering(n_clusters=2, affinity="euclidean",linkage="ward")
cluster = hc.fit_predict(data)
data['Label'] = cluster
data

plt.scatter(data['Glucose'], data['BloodPressure'], c = cluster)
plt.xlabel('Glucose')
plt.ylabel('BloodPressure')
plt.show()

plt.scatter(data['Glucose'], data['BloodPressure'], c = data['Outcome'])
plt.xlabel('Glucose')
plt.ylabel('BloodPressure')
plt.show()

correct = []
for i in range(0,767):
    if data['Label'][i] == data['Outcome'][i]:
        correct.append(1)
    else:
        correct.append(0)
correct[0:10] # -> if we find correctly 1, if not 0

print(" Clustering Accuracy : ", (correct.count(1)/data['Label'].size)*100)